@model GiraffeSpotter.Models.ViewModels.ObservationViewModel

<link rel="stylesheet" type="text/css" href="~/Content/style.css" />
<link rel="stylesheet" type="text/css" href="~/Content/demo.css" />
<link rel="stylesheet" type="text/css" href="~/Content/elastislide.css" />
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.tmpl.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.elastislide.js"></script>
<script type="text/javascript" src="~/Scripts/gallery.js"></script>

<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
    #map_canvas img {
        max-width: none;
    }

    .es-carousel ul {
        display: block;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    Html.EnableClientValidation(true);

    //Preserving the View Model State so that the values are assessible by the post method of this view.
    
    @Html.HiddenFor(model => model.observation.Id);
    @Html.HiddenFor(model => model.observation.No_of_Female);
    @Html.HiddenFor(model => model.observation.No_of_Male);
    @Html.HiddenFor(model => model.observation.Status);
    @Html.HiddenFor(model => model.observation.Sub_Species);
    @Html.HiddenFor(model => model.observation.Group_Size);
    @Html.HiddenFor(model => model.observation.Date_of_Observation);
    @Html.HiddenFor(model => model.observation.Date_of_Submission);   
    @Html.HiddenFor(model => model.Longitude);   
    @Html.HiddenFor(model => model.Latitude);
    @Html.HiddenFor(model => model.observation.Comment)
    
    <h2 align="center">Take Action: Create Observation (Final Step)</h2>
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-4">
            <div class="panel panel-gold" style="border-color: #636363;">
                <div class="panel-heading">
                    <h2 align="center">Google Maps Location</h2>
                </div>
                <div id="map_canvas" style="height: 450px;"></div>
            </div>
        </div>

        <div class=" col-md-4 ">
            <div class="tabbable">
                <ul class="nav nav-tabs" style="color: black;">
                    <li class=""><a data-toggle="tab" href="#TabsId-1">Observation Details</a></li>
                    <li class=""><a data-toggle="tab" href="#TabsId-2">Uploaded Images</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="TabsId-1">
                        <div class="panel panel-gold" style="border-color: #636363;">
                            <div class="panel-heading">
                                <h2 align="center">Giraffe Sighting Information</h2>
                            </div>
                            <table class="table table-bordered">
                                <tr>
                                    <td>
                                        <strong>Date of Observation</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.Date_of_Observation)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <strong>Subspecies</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.Sub_Species)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <strong>Number of Males</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.No_of_Male)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <strong>Number of Females</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.No_of_Female)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <strong>Group Size</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.Group_Size)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <strong>Date of Submission</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.observation.Date_of_Submission)
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="tab-pane" id="TabsId-2">
                        <div class="content">
                            <div id="rg-gallery" class="rg-gallery">
                                <div class="rg-thumbs">
                                    <!-- Elastislide Carousel Thumbnail Viewer -->
                                    <div class="es-carousel-wrapper">
                                        <div class="es-nav">
                                            <span class="es-nav-prev">Previous</span>
                                            <span class="es-nav-next">Next</span>
                                        </div>
                                        <div class="es-carousel">
                                            <ul>
                                                @foreach (var item in Model.imageList)
                                                {
                                                    <li><a href="#">
                                                        <img src="data:image;base64,@System.Convert.ToBase64String(item.thumb)" data-large="data:image;base64,@System.Convert.ToBase64String(item.image)" alt="image01" data-description="" />
                                                    </a></li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                    <!-- End Elastislide Carousel Thumbnail Viewer -->
                                </div>
                                <!-- rg-thumbs -->
                            </div>
                            <!-- rg-gallery -->
                        </div>
                        <!-- content -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <br />
    
    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            <input class="btn btn-safari btn-lg btn-block" type="submit" value="Save Observation" />
        </div>
    </div>
}

<br />

@section scripts{
    <script id="img-wrapper-tmpl" type="text/x-jquery-tmpl">
        <div class="rg-image-wrapper">
            {{if itemsCount > 1}}
					<div class="rg-image-nav">
                        <a href="#" class="rg-image-nav-prev">Previous Image</a>
                        <a href="#" class="rg-image-nav-next">Next Image</a>
                    </div>
            {{/if}}
				<div class="rg-image"></div>
            <div class="rg-loading"></div>
            <div class="rg-caption-wrapper">
                <div class="rg-caption" style="display: none;">
                    <p></p>
                </div>
            </div>
        </div>
    </script>

    <section class="scripts">
        <script type="text/javascript">
            <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens 
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI 53.408841, -2.981397
        google.maps.visualRefresh = true;
        var observation = new google.maps.LatLng('@Model.Latitude', '@Model.Longitude')

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 16,
            center: observation,
            mapTypeId: google.maps.MapTypeId.SATELLITE
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
        var myLatlng = new google.maps.LatLng('@Model.Latitude', '@Model.Longitude');

        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
            title: 'Observation'
        });

        marker.setIcon('/Images/GiraffePin2.png')
    }
        </script>
    </section>
}